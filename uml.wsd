@startuml name "Parking Simulator"
title Symulator parkingu Oliwia Banachowska Amelia Dakowicz Maciej Klepacki

Vehicle --o Parking

Vehicle : +string Registration
Vehicle : +CarType carType
Vehicle : +List<Clock> EntranceTime
Vehicle : +List<Clock> DepartureTime
Vehicle : +bool IsParked
Vehicle : +Vehicle(string registration, CarType carType)
Vehicle : -void ValidateRegistration(string registration)
Vehicle : +string VehicleInfo()

Clock : +int Minute
Clock : +int Hour
Clock : +int Day
Clock : +Clock()
Clock : +void Tick()
Clock : +string DisplayTime()
Clock : + {static} operator -(Clock a, Clock b)
Clock : +void SkipToEndOfDay()
Clock : +void SkipToHour(int targetHour)

Clock --* Parking

Parking : +Clock Time
Parking : -Dictionary<string, Vehicle> CarList
Parking : -int MaximumCapacity
Parking : -int ActualCapacity
Parking : -Raport Raport
Parking : +Parking()
Parking : +void Tick()
Parking : +void Entrance(Vehicle vehicle)
Parking : +void Departure(Vehicle vehicle)
Parking : +void ParkingCurrentStatus()
Parking : +void ShowDailyRaport(int day)
Parking : +void ShowHistory()
Parking : +void SkipToEndOfDay()
Parking : +void SkipToHour(int hour)

Raport : -Dictionary<int, List<Vehicle>> DailyRaport
Raport : +Raport()
Raport : +void AddVehicle(int Day, Vehicle vehicle)
Raport : +void DisplayDailyRaport(int Day)
Raport : +void DisplayHistory()

Raport --* Parking


enum CarType {
    Passenger Car
    Delivery Truck
    Truck
}

@enduml